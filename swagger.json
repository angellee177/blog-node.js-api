{
  "swagger": "2.0",
  "info": {
    "description": "This is API Documentation.",
    "version": "1.0.0",
    "title": "Express Auth",
    "contact": {
      "email": "FikriRNurhidayat@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "",
  "basePath": "/api",
  "tags": [
    {
      "name": "User Operation",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user/": {
      "get": {
        "tags": [
          "User Operation"
        ],
        "summary": "Show All User",
        "description": "Show all user registered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All user showed."
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "User Operation"
        ],
        "summary": "Register User",
        "description": "Regiter an user",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Users that will be registered on database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created."
          },
          "422":{
            "description": "Email Already Register"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "User Operation"
        ],
        "summary": "Login User",
        "description": "Login to registered user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Will post email and password to database and database will check if it's true or not.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If user exist, and  the password is matched. It will response token object."
          },
          "421":{
            "description": "Email are not registered!"
          },
          "422":{
            "description": "There is something wrong with your password"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/currentUser": {
      "get": {
        "tags": [
          "User Operation"
        ],
        "summary": "current User",
        "description": "show Current User Information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "header",
            "description": "Will gett User Data from token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If access is given. It will show user detail information."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/show/:id": {
      "get": {
        "tags": [
          "User Operation"
        ],
        "summary": "Show User",
        "description": "Get users details information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If access is given. It will show user details."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/delete": {
      "delete": {
        "tags": [
          "User Operation"
        ],
        "summary": "Delete User",
        "description": "Delete current user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If access is given. It will delete current user."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/create/post": {
      "post": {
        "tags": [
          "Post Operation"
        ],
        "summary": "Create Post",
        "description": "Create post for current user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "It will create user post if access is given.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "If access is given. It will create current user post."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "Post Operation"
        ],
        "summary": "Get Post",
        "description": "Get current user post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If access is given. It will show current user post."
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "UserRegister": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example":"angel"
        },
        "email": {
          "type": "string",
          "example": "test@mail.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "test@mail.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "Post": {
      "type": "object",
      "required": [
        "title",
        "body"
      ],
      "properties": {
        "title": {
          "type": "string",
          "example": "Jalan-jalan"
        },
        "body": {
          "type": "string",
          "example": "Taman Nasional"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}